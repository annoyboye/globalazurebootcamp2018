{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templateLibraryBaseUri": {
      "type": "string",
      "minLength": 2
    },
    "templateLibrarySasToken": {
      "type": "string",
      "minLength": 2
    },
    "productName": {
      "minLength": 2,
      "type": "string"
    },
    "serviceName": {
      "minLength": 2,
      "type": "string"
    },
    "serviceSize": {
      "defaultValue": "xs",
      "allowedValues": [
        "xs",
        "s",
        "m",
        "l",
        "xl"
      ],
      "type": "string"
    },
    "instrumentationProvider": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "App Dynamics",
        "New Relic"
      ],
      "type": "string"
    },
    "environment": {
      "defaultValue": "development",
      "allowedValues": [
        "development",
        "test",
        "staging",
        "preview",
        "production"
      ],
      "type": "string"
    },
    "region": {
      "defaultValue": "West US",
      "allowedValues": [
        "East US",
        "East US 2",
        "Central US",
        "North Central US",
        "West Central US",
        "West US",
        "West US 2",
        "Canada East",
        "Canada Central",
        "Brazil South",
        "North Europe",
        "West Europe",
        "Germany Central",
        "Germany Northeast",
        "UK West",
        "UK South",
        "France Central",
        "France South",
        "Southeast Asia",
        "East Asia",
        "Australia East",
        "Australia Southeast",
        "China East",
        "China North",
        "Central India",
        "West India",
        "South India",
        "Japan East",
        "Japan West",
        "Korea Central",
        "Korea South"
      ],
      "type": "string"
    },
    "globalLogStorageSasUrl": {
      "minLength": 5,
      "type": "string"
    },
    "platformDocumentCollectionKey": {
      "defaultValue": "",
      "type": "string"
    },
    "hostingPlanNameOverride": {
      "defaultValue": "",
      "type": "string"
    },
    "defaultSkuOverride": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "I1",
        "I2",
        "I3"
      ],
      "type": "string"
    },
    "minimumInstanceCountOverride": {
      "defaultValue": 0,
      "type": "int"
    },
    "maximumInstanceCountOverride": {
      "defaultValue": 0,
      "type": "int"
    },
    "eventPublicationTopic": {
      "defaultValue": "",
      "minLength": 1,
      "type": "string"
    }
  },
  "variables": {
    "environmentShortCodes": {
      "development": "d",
      "test": "t",
      "staging": "s",
      "preview": "v",
      "production": "p"
    },
    "regionCodes": {
      "East US": "10",
      "East US 2": "11",
      "Central US": "14",
      "North Central US": "15",
      "West Central US": "16",
      "West US": "18",
      "West US 2": "19",
      "Canada East": "20",
      "Canada Central": "24",
      "Brazil South": "30",
      "North Europe": "40",
      "West Europe": "54",
      "Germany Central": "50",
      "Germany Northeast": "54",
      "UK West": "60",
      "UK South": "64",
      "France Central": "70",
      "France South": "74",
      "Southeast Asia": "80",
      "East Asia": "84",
      "Australia East": "90",
      "Australia Southeast": "94",
      "China East": "A0",
      "China North": "A4",
      "Central India": "B0",
      "West India": "B4",
      "South India": "B8",
      "Japan East": "C0",
      "Japan West": "C4",
      "Korea Central": "D0",
      "Korea South": "D4"
    },
    "resourceTypeShortCodes": {
      "Resource Group": "rg",
      "Availability Set": "avs",
      "Virtual Machine": "vm",
      "Storage Account": "stg",
      "Virtual Network": "vn",
      "Network Interface": "nif",
      "Network Security Group": "nsg",
      "Network Security Group Rule": "nsg",
      "Public IP Address": "ip",
      "Load Balancer": "lb",
      "Application Gateway": "agw",
      "Traffic Manager Profile": "tmp",
      "App Service": "svc",
      "Key Vault": "kv",
      "App Service Plan": "asp",
      "Cosmos DB": "cdb",
      "Azure SQL Server": "sql",
      "Azure Search": "srch",
      "OMS Workspace": "oms",
      "App Service Environment": "ase",
      "API Management": "apimgmt",
      "Event Hub": "eh",
      "Service Bus": "sb",
      "Notification Hub": "nh",
      "Redis Cache": "rc",
      "Data Lake Store": "dls"
    },
    "databaseAccountName": "[concat(parameters('productName'),'platform','cdb',variables('environmentShortCodes')[parameters('environment')],variables('regionCodes')[parameters('region')])]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "microservicetemplate",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateLibraryBaseUri'),'/common/qualia/qualia-microservice.json',parameters('templateLibrarySasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "productName": {
            "value": "[parameters('productName')]"
          },
          "serviceName": {
            "value": "[parameters('serviceName')]"
          },
          "serviceSize": {
            "value": "[parameters('serviceSize')]"
          },
          "instrumentationProvider": {
            "value": "[parameters('instrumentationProvider')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "region": {
            "value": "[parameters('region')]"
          },
          "globalLogStorageSasUrl": {
            "value": "[parameters('globalLogStorageSasUrl')]"
          },
          "platformDocumentCollectionKey": {
            "value": "[parameters('platformDocumentCollectionKey')]"
          },
          "hostingPlanNameOverride": {
            "value": "[parameters('hostingPlanNameOverride')]"
          },
          "defaultSkuOverride": {
            "value": "[parameters('defaultSkuOverride')]"
          },
          "minimumInstanceCountOverride": {
            "value": "[parameters('minimumInstanceCountOverride')]"
          },
          "maximumInstanceCountOverride": {
            "value": "[parameters('maximumInstanceCountOverride')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "servicebus",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateLibraryBaseUri'),'/common/qualia/qualia-servicebuswithtopic.json',parameters('templateLibrarySasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "topicName": {
            "value": "[parameters('eventPublicationTopic')]"
          },
          "productName": {
            "value": "[parameters('productName')]"
          },
          "region": {
            "value": "[parameters('region')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "component": {
            "value": "platform"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "cosmos",
      "apiVersion": "2017-05-10",
      "condition": "[equals('true','ENABLE_COSMOS_DB')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateLibraryBaseUri'),'/common/qualia/qualia-cosmosdb.json',parameters('templateLibrarySasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "productName": {
            "value": "[parameters('productName')]"
          },
          "region": {
            "value": "[parameters('region')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "component": {
            "value": "platform"
          }
        }
      }
    }
  ],
  "outputs": {
    "appServiceName": {
      "type": "string",
      "value": "[reference('microservicetemplate').outputs.appServiceName.value]"
    },
    "databaseAccountName": {
      "type": "string",
      "value": "[reference('cosmos').outputs.databaseAccountName.value]"
    },
    "serviceBusName": {
      "type": "string",
      "value": "[reference('servicebus').outputs.serviceBusName.value]"
    }
  }
}